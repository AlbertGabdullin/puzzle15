{"version":3,"sources":["static/numberBackground.svg","static/background.svg","static/board.svg","static/button.svg","components/Tile/index.jsx","components/Button/items/ArrowRigth.jsx","components/Button/items/ArrowLeft.jsx","components/Button/items/Update.jsx","components/Button/index.jsx","components/Tools/index.jsx","helpers/randomInteger.js","helpers/getNullCell.js","helpers/shuffle.js","helpers/getDirection.js","containers/Board/index.jsx","actions/index.js","App.js","serviceWorker.js","helpers/getMovePosition.js","reducers/game.js","reducers/timer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","TileWrapper","styled","div","_templateObject","props","noBorder","Square","_templateObject2","numberBackground","Tile","_ref","item","move","tX","width","height","tY","react_default","a","createElement","onClick","line","column","style","transform","concat","transition","key","number","ArrowRight","xmlns","viewBox","id","data-name","d","fill","ArrowLeft","UpdateButton","ButtonWrap","Button_templateObject","ButtonBg","Button","name","items","ToolsWrapper","Tools_templateObject","Tools","newGame","prevStep","nextStep","components_Button","randomInteger","min","max","rand","Math","random","round","getNullCell","numbers","obj","i","length","j","nullLine","nullCol","getMovePosition","size","left","right","top","bottom","columnMod","abs","lineMod","directionKeys","newDirections","map","newDirection","forEach","filter","randDirection","shuffle","shuffleCount","_getNullCell","_getMovePosition","_getMovePosition2","Object","slicedToArray","newLine","newCol","temp","getDirection","movable","nullable","lineM","columnM","lineN","columnN","Container","Board_templateObject","Board","FullContainer","Board_templateObject2","Background","BoardComponent","_templateObject3","state","boardSize","resizeBoard","_this","w","window","document","documentElement","body","getElementsByTagName","innerWidth","clientWidth","innerHeight","clientHeight","console","log","setState","onKeyDown","e","keyCode","moveTile","direction","this","addEventListener","removeEventListener","_this2","matrix","_this$state","newArray","child","el","push","padding","tiles","index","spring","floor","react_motion","react","components_Tile","_this$props","tabIndex","components_Tools","Component","connect","_state$game","game","counter","dispatch","ownProps","type","payload","Boolean","location","hostname","match","getPosition","nullPosition","initialState","steps","arguments","undefined","action","newMatrix","_getPosition","_getPosition2","objectSpread","toConsumableArray","lastIndex","_steps$nextIndex","_getNullCell2","prevIndex","_steps2$prevIndex","_getNullCell3","timerReducer","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b96ab845.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/numberBackground.d63d02fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.1d4faf5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/board.0df52569.svg\";","module.exports = __webpack_public_path__ + \"static/media/button.9203b416.svg\";","// @flow\nimport React from 'react';\nimport styled from \"styled-components\";\nimport numberBackground from '../../static/numberBackground.svg';\nimport type {\n  GameMatrix\n} from \"../../types\";\n\nconst TileWrapper = styled.div`\n  position: absolute;\n  z-index: 1;\n  background: #fff;\n  border-radius: 10px;\n  padding: 5px;\n  background: transparent;\n  cursor: pointer;\n  width: 21.875%;\n  height: 21.875%;\n  \n  ${props => props.noBorder && `\n    z-index: -2;\n  `}\n`;\n\nconst Square = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: 'Coming Soon', sans-serif;\n  font-size: 35px;\n  line-height: 35px;\n  z-index: 1;\n  border-radius: 5px;\n  width: 100%;\n  height: 100%;\n  background-image: url(${numberBackground});\n  background-size: contain;\n  background-repeat: no-repeat;\n \n  ${props => props.noBorder && `\n    border: none;\n    z-index: -1;\n  `}\n  \n  @media(max-width: 400px) {\n    font-size: 30px;\n    line-height: 30px;\n  }\n`;\n\ntype Props = {\n  move: (line: number, column: number) => GameMatrix,\n  tX: number,\n  tY: number,\n  height: number,\n  width: number,\n  noBorder: boolean,\n  item: {\n    line: number,\n    column: number,\n    number: number,\n  }\n}\n\nconst Tile = ({\n  item,\n  noBorder,\n  move,\n  width,\n  height,\n  tX,\n  tY,\n}: Props) => {\n  return (\n    <TileWrapper\n      onClick={() => !noBorder && move(item.line, item.column)}\n      style={{\n      transform: `translate(${tX}px,${tY}px) scale(1.0)`,\n      transition: `transform 100ms ease`,\n    }}>\n      <Square key={item.number}  >\n        {!noBorder && item.number}\n      </Square>\n    </TileWrapper>\n  );\n}\n\n\n\nexport default Tile;","import React from 'react';\n\nconst ArrowRight = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22.876\" height=\"28.629\" viewBox=\"0 0 22.876 28.629\">\n    <path id=\"Path_1507\" data-name=\"Path 1507\" d=\"M194.827,132.3c-.669.835-.841,25.783.42,28.089s21.727-10.1,21.937-14.506S196.509,130.2,194.827,132.3Z\" transform=\"translate(-194.311 -132.039)\" fill=\"#eed8a6\"/>\n  </svg>\n);\n\nexport default ArrowRight;","import React from 'react';\n\nconst ArrowLeft = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22.843\" height=\"28.66\" viewBox=\"0 0 22.843 28.66\">\n    <path id=\"Path_1507\" data-name=\"Path 1507\" d=\"M216.637,132.3c.668.836.839,25.811-.42,28.12s-21.7-10.116-21.905-14.522S214.958,130.2,216.637,132.3Z\" transform=\"translate(-194.311 -132.039)\" fill=\"#eed8a6\"/>\n  </svg>\n);\n\nexport default ArrowLeft;\n\n\n","import React from 'react';\n\nconst UpdateButton = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"39.476\" height=\"38.389\" viewBox=\"0 0 39.476 38.389\">\n    <g id=\"Group_11668\" data-name=\"Group 11668\" transform=\"translate(-568.374 -485.362)\">\n      <g id=\"Group_4877\" data-name=\"Group 4877\" transform=\"translate(568.374 485.362)\">\n        <path id=\"Path_1507\" data-name=\"Path 1507\" d=\"M10.265.118c.307.384.386,11.868-.193,12.929S.1,8.4,0,6.37,9.494-.846,10.265.118Z\" transform=\"matrix(0.788, -0.616, 0.616, 0.788, 0, 11.189)\" fill=\"#eed8a6\"/>\n        <path id=\"Path_112289\" data-name=\"Path 112289\" d=\"M.015,5.516C-.3,5.8,4.566,7.78,5.068,14.3c.31,5.917-3.685,9.029-3.448,9.562.475,1.069,5.989,4.076,6.583,3.363a23.762,23.762,0,0,0,3.976-7.95,19.33,19.33,0,0,0-1.03-11.769C9.479,3.23,5.316.575,5.024.137,4.311-.932,1.084,4.566.015,5.516Z\" transform=\"translate(7.766 12.11) rotate(-73)\" fill=\"#eed8a6\"/>\n      </g>\n      <g id=\"Group_4878\" data-name=\"Group 4878\" transform=\"translate(570.242 502.178)\">\n        <path id=\"Path_1507-2\" data-name=\"Path 1507\" d=\"M10.265.118c.307.384.386,11.868-.193,12.929S.1,8.4,0,6.37,9.494-.846,10.265.118Z\" transform=\"matrix(-0.788, 0.616, -0.616, -0.788, 37.608, 10.384)\" fill=\"#eed8a6\"/>\n        <path id=\"Path_112289-2\" data-name=\"Path 112289\" d=\"M.015,5.516C-.3,5.8,4.566,7.78,5.068,14.3c.31,5.917-3.685,9.029-3.448,9.562.475,1.069,5.989,4.076,6.583,3.363a23.762,23.762,0,0,0,3.976-7.95,19.331,19.331,0,0,0-1.03-11.769C9.479,3.23,5.316.575,5.024.137,4.311-.932,1.084,4.566.015,5.516Z\" transform=\"translate(29.842 9.464) rotate(107)\" fill=\"#eed8a6\"/>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default UpdateButton;\n\n\n","//@flow\nimport React, { createElement } from 'react';\nimport styled from 'styled-components';\nimport * as items from './items';\nimport ButtonBg from '../../static/button.svg';\n\nconst ButtonWrap = styled.div`\n  background-image: url(${ButtonBg});\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background-size: contain;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  margin-right: 5px;\n  margin-left: 5px;\n`;\n\ntype Props = {\n  onClick: () => void,\n  name: string,\n}\n\nconst Button = ({\n  onClick,\n  name,\n}: Props) => {\n  return (\n    <ButtonWrap onClick={onClick}>\n      {createElement(items[name])}\n    </ButtonWrap>\n  )\n};\n\nexport default Button;","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button';\nimport type {\n  GameState\n} from \"../../types\";\n\nconst ToolsWrapper = styled.div`\n  display: flex;\n`;\n\ntype Props = {\n  newGame: () => GameState,\n  nextStep: () => GameState,\n  prevStep: () => GameState,\n}\n\nconst Tools = ({\n  newGame,\n  prevStep,\n  nextStep,\n}: Props) => {\n  return (\n    <ToolsWrapper>\n      <Button onClick={newGame} name=\"Update\" />\n      <Button onClick={prevStep} name=\"ArrowLeft\" />\n      <Button onClick={nextStep} name=\"ArrowRight\" />\n    </ToolsWrapper>\n  )\n}\n\nexport default Tools;","const randomInteger = (min: number, max: number) => {\n  let rand = min - 0.5 + Math.random() * (max - min + 1);\n  rand = Math.round(rand);\n  return rand;\n};\n\nexport default randomInteger;","import type { GameMatrix, NullCell} from \"../types\";\n\nconst getNullCell = (numbers: GameMatrix):NullCell => {\n  let obj = {};\n  for(let i = 0; i < numbers.length; i++) {\n    for(let j = 0; j < numbers[i].length; j++) {\n      if(numbers[i][j] === 0) {\n        obj =  {\n          nullLine: i,\n          nullCol: j,\n        }\n      }\n    }\n  }\n  return obj;\n};\n\nexport default getNullCell;","//@flow\nimport randomInteger from \"./randomInteger\";\nimport getNullCell from \"./getNullCell\";\n\nconst getMovePosition = (nullLine: number, nullCol: number, size: Array<number>) => {\n  let left = true;\n  let right = true;\n  let top = true;\n  let bottom = true;\n  const columnMod = Math.abs(nullCol - (size[0]));\n  const lineMod = Math.abs(nullLine - (size[1]));\n\n  if(nullLine === 0) {\n    top = false;\n  }\n  if(nullCol === 0) {\n    left = false;\n  }\n  if(lineMod === 0) {\n    bottom = false;\n  }\n  if(columnMod === 0) {\n    right = false;\n  }\n  if(nullLine === 0 && nullCol === 0) {\n    top = false;\n    left = false;\n  }\n  if(columnMod === 0 && lineMod === 0) {\n    bottom = false;\n    right = false\n  }\n  if(nullLine === 0 && columnMod === 0) {\n    top = false;\n    right = false;\n  }\n  if(nullCol === 0 && lineMod === 0) {\n    bottom = false;\n    left = false;\n  }\n\n  //filter directions, which are not true\n  const directionKeys = ['right', 'top', 'bottom', 'left'];\n  const directions = [{top}, {right}, {bottom}, {left}];\n  const newDirections = directions.map(item=> {\n    let newDirection = null;\n    directionKeys.forEach(key => {\n      if(item[key]) newDirection = key;\n    });\n    return newDirection;\n  }).filter(item => item !== null);\n\n  const randDirectionIndex = randomInteger(0, newDirections.length - 1);\n  const randDirection = newDirections[randDirectionIndex];\n\n  //getPosition\n  if(randDirection === 'top') return [nullLine - 1, nullCol];\n  if(randDirection === 'right') return [nullLine, nullCol + 1];\n  if(randDirection === 'left') return [nullLine, nullCol- 1];\n  if(randDirection === 'bottom') return [nullLine + 1, nullCol];\n};\n\nconst shuffle = (numbers, size) => {\n  const shuffleCount = randomInteger(150, 200);\n  for(let i = 0; i<shuffleCount; i++) {\n    const { nullLine, nullCol } = getNullCell(numbers);\n    const [ newLine, newCol ] = getMovePosition(nullLine, nullCol, size);\n    const temp = numbers[nullLine][nullCol];\n    numbers[nullLine][nullCol] = numbers[newLine][newCol];\n    numbers[newLine][newCol] = temp;\n  }\n\n  return numbers;\n};\n\nexport default shuffle;","const getDirection = (movable, nullable) => {\n  const { lineM, columnM } = movable;\n  const { lineN, columnN } = nullable;\n  if(lineM === lineN + 1 && columnM === columnN) {\n    return 'top';\n  }\n  if(lineM === lineN - 1 && columnM === columnN) {\n    return 'bottom';\n  }\n  if(lineM === lineN && columnM === columnN - 1) {\n    return 'right';\n  }\n  if(lineM === lineN && columnM === columnN + 1) {\n    return 'left';\n  }\n};\n\nexport default getDirection;","import React, {Component, Fragment, createRef} from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Motion, spring } from 'react-motion';\nimport { moveTile, newGame, nextStep, prevStep } from \"../../actions\";\nimport Tile from '../../components/Tile';\nimport Background from '../../static/background.svg';\nimport Board from '../../static/board.svg';\nimport Tools from \"../../components/Tools\";\nimport type { GameMatrix, GameState } from \"../../types\";\nimport shuffle from \"../../helpers/shuffle\";\nimport getNullCell from \"../../helpers/getNullCell\";\nimport getDirection from \"../../helpers/getDirection\";\n\nconst Container = styled.div`\n  position: relative;\n  max-width: ${props => props.size}px;\n  max-height: ${props => props.size}px;\n  width: 100%;\n  height: 100%;\n  margin: 60px auto 0 auto;\n  background-image: url(${Board});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  margin-bottom: 20px;\n\n  > * {\n    box-sizing: border-box;\n  }\n`;\n\nconst FullContainer = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  background-image: url(${Background});\n  background-repeat: no-repeat;\n  background-size: cover;\n  align-items: center;\n`;\n\nconst NewGame = styled.div`\n  position: absolute;\n  left: 6.25%;\n  top: 6.25%;\n  width: 87.5%;\n  height: 87.5%;\n  background-color: rgba(0, 0, 0, 1);\n  z-index: 10;\n`;\n\n\n\ntype Props = {\n  newGame: () => GameState,\n  nextStep: () => GameState,\n  prevStep: () => GameState,\n  moveTile: () => GameMatrix,\n}\n\ntype State = {\n  width: number,\n  height: number,\n}\n\nclass BoardComponent extends Component<Props, State> {\n  state = {\n    boardSize: 400,\n    width: 21.875,\n    height: 21.875,\n  };\n\n  componentWillMount(): void {\n    this.resizeBoard();\n  }\n\n  componentDidMount(): void {\n    this.props.newGame();\n    document.addEventListener('keydown', this.onKeyDown);\n    window.addEventListener('resize', this.resizeBoard);\n  }\n  componentWillUnmount(): void {\n    document.removeEventListener('keydown', this.onKeyDown);\n    window.removeEventListener('resize', this.resizeBoard);\n  }\n\n  resizeBoard = () => {\n    const { boardSize } = this.state;\n\n    const w = window,\n      d = document,\n      documentElement = d.documentElement,\n      body = d.getElementsByTagName('body')[0],\n      width = w.innerWidth || documentElement.clientWidth || body.clientWidth,\n      height = w.innerHeight|| documentElement.clientHeight|| body.clientHeight;\n\n    if(boardSize > width) {\n      console.log(1234);\n      this.setState({\n        boardSize: width * 0.9,\n      });\n    } else {\n      this.setState({\n        boardSize: 400,\n      });\n    }\n  };\n\n  onKeyDown = (e) => {\n    if(e.keyCode === 38) {\n      this.props.moveTile('top');\n    }\n    if(e.keyCode === 40) {\n      this.props.moveTile('bottom');\n    }\n    if(e.keyCode === 37) {\n      this.props.moveTile('left');\n    }\n    if(e.keyCode === 39) {\n      this.props.moveTile('right');\n    }\n  }\n\n  move = (line, column) => {\n    const { numbers } = this.props;\n    const { nullLine, nullCol } = getNullCell(numbers);\n    const movable = {\n      lineM: line,\n      columnM: column,\n    };\n    const nullable = {\n      lineN: nullLine,\n      columnN: nullCol,\n    };\n\n    const direction = getDirection(movable, nullable);\n    this.props.moveTile(direction);\n  };\n\n  render() {\n    const { matrix } = this.props;\n    const { width, height, boardSize } = this.state;\n\n    let newArray = [];\n    matrix.forEach((item, line) => {\n      item.forEach((child, column) => {\n        const el =  {\n          number: child,\n          line,\n          column,\n        };\n        newArray.push(el);\n      });\n    });\n    const padding = boardSize * (6.25 / 100);\n\n    const tiles = newArray.map((item, index) => {\n      const style = {\n        tX: spring(boardSize * (width / 100) * (index % 4) + padding),\n        tY: spring(boardSize * (height / 100) * (Math.floor(index / 4)) + padding),\n        width: boardSize * (width / 100),\n        height: boardSize * (height / 100),\n      };\n\n      return (\n        <Motion key={item.number} style={style}>\n          {({ tX, tY, width, height }) => (\n            <Fragment>\n              {\n                item.number !== 0 && (\n                  <Tile\n                    item={item}\n                    index={index}\n                    width={width}\n                    height={height}\n                    padding={padding}\n                    move={this.move}\n                    key={index}\n                    tX={tX}\n                    tY={tY}\n                  />\n                )\n              }\n            </Fragment>\n          )}\n        </Motion>\n      )\n    });\n\n    const { prevStep, nextStep, newGame } = this.props;\n    return (\n      <FullContainer tabIndex=\"1\">\n        <Container size={boardSize}>\n          {tiles}\n          {/*<NewGame />*/}\n        </Container>\n        <Tools\n          newGame={newGame}\n          prevStep={prevStep}\n          nextStep={nextStep}\n        />\n      </FullContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GameState) => {\n  const { counter, matrix } = state.game;\n\n  return {\n    matrix,\n    counter,\n  }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n\n  return {\n    moveTile: (line, column) => dispatch(moveTile(line, column)),\n    newGame: () => dispatch(newGame(shuffle(ownProps.numbers, ownProps.size))),\n    nextStep: () => dispatch(nextStep()),\n    prevStep: () => dispatch(prevStep()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardComponent);\n","import type {\n  GameMatrix,\n  GameState\n} from \"../types\";\n\nexport const NEW_GAME = 'NEW_GAME';\nexport const MOVE_TILE = 'MOVE_TILE';\nexport const NEXT_STEP = 'NEXT_STEP';\nexport const PREV_STEP = 'PREV_STEP';\n\nexport const newGame = (numbers: GameMatrix):GameState => ({\n  type: NEW_GAME,\n  payload: numbers,\n});\n\nexport const moveTile = (direction):GameMatrix => ({\n  type: MOVE_TILE,\n  payload: direction\n});\n\nexport const nextStep = ():GameState => ({\n  type: NEXT_STEP,\n});\n\nexport const prevStep = ():GameState => ({\n  type: PREV_STEP,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Board from './containers/Board';\n\nconst App = props => (\n  <Board {...props} />\n);\n\nconst mapStateToProps = state => ({\n  numbers: state.game.matrix,\n  size: state.game.size,\n});\n\nexport default connect(mapStateToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const getPosition = (direction: string, nullPosition: Object<number, number>) => {\n  const { nullLine, nullCol } = nullPosition;\n\n  switch(direction) {\n    case 'top':\n      return [nullLine + 1, nullCol];\n    case 'bottom':\n      return [nullLine - 1, nullCol];\n    case 'left':\n      return [nullLine, nullCol + 1];\n    case 'right':\n      return [nullLine, nullCol - 1];\n    default:\n      return [nullLine, nullCol];\n  }\n};\n\nexport default getPosition;","import {\n  MOVE_TILE,\n  NEW_GAME,\n  NEXT_STEP,\n  PREV_STEP\n} from \"../actions\";\nimport getNullCell from \"../helpers/getNullCell\";\nimport getPosition from \"../helpers/getMovePosition\";\n\nconst initialState = {\n  matrix: [\n    [1,2,3,4],\n    [5,6,7,8],\n    [9,10,11,12],\n    [13,14,15,0],\n  ],\n  steps: [],\n  size: [3,3],\n  index: 0,\n};\n\nconst game = (state = initialState, action) => {\n  switch(action.type) {\n    case MOVE_TILE: {\n      let newMatrix = [];\n      const direction = action.payload;\n      const { index, counter, matrix, steps, size } = state;\n      const nullPosition = getNullCell(matrix);\n      const [line, column] = getPosition(direction, nullPosition);\n\n      if(line < 0 || column < 0 || line > size[0] || column > size[1]) {\n        return state;\n      }\n\n      const { nullLine, nullCol } = nullPosition;\n      const columnMod = Math.abs(column - nullCol);\n      const lineMod = Math.abs(line - nullLine);\n\n      if((line === nullLine && columnMod === 1) || (column === nullCol && lineMod === 1)){\n        const temp = matrix[nullLine][nullCol];\n        matrix[nullLine][nullCol] = matrix[line][column];\n        matrix[line][column] = temp;\n        newMatrix = matrix;\n      }\n      newMatrix = matrix;\n\n      return {\n        ...state,\n        matrix: newMatrix,\n        counter: counter + 1,\n        index: index + 1,\n        steps: [\n          ...steps,\n          { line, column },\n        ],\n      };\n    }\n\n    case NEW_GAME: {\n      const { matrix } = state;\n      const newMatrix = action.payload;\n      const { nullLine, nullCol } = getNullCell(matrix);\n      return {\n        ...state,\n        matrix: [...newMatrix],\n        counter: 0,\n        steps: [\n          {\n            line: nullLine,\n            column: nullCol,\n          },\n         ]\n      }\n    }\n    case NEXT_STEP: {\n      let newMatrix = [];\n      const { index, steps, matrix } = state;\n      const lastIndex = steps.length > 0 ? steps.length - 1 : 0;\n      const nextIndex = index < lastIndex ? index + 1 : lastIndex;\n      const { line, column } = steps[nextIndex];\n\n      const { nullLine, nullCol } = getNullCell(matrix);\n      const columnMod = Math.abs(column - nullCol);\n      const lineMod = Math.abs(line - nullLine);\n\n      if((line === nullLine && columnMod === 1) || (column === nullCol && lineMod === 1)){\n        const temp = matrix[nullLine][nullCol];\n        matrix[nullLine][nullCol] = matrix[line][column];\n        matrix[line][column] = temp;\n        newMatrix = matrix;\n      }\n      newMatrix = matrix;\n\n      return {\n        ...state,\n        matrix: [...newMatrix],\n        index: index < steps.length -1 ? index + 1 : steps.length - 1,\n      };\n    }\n    case PREV_STEP: {\n      let newMatrix = [];\n      const { index, steps, matrix } = state;\n      const prevIndex = index > 0 ? index - 1 : 0;\n      const { line, column } = steps[prevIndex];\n      const { nullLine, nullCol } = getNullCell(matrix);\n      const columnMod = Math.abs(column - nullCol);\n      const lineMod = Math.abs(line - nullLine);\n\n      if((line === nullLine && columnMod === 1) || (column === nullCol && lineMod === 1)){\n        const temp = matrix[nullLine][nullCol];\n        matrix[nullLine][nullCol] = matrix[line][column];\n        matrix[line][column] = temp;\n        newMatrix = matrix;\n      }\n      newMatrix = matrix;\n\n      return {\n        ...state,\n        matrix: [...newMatrix],\n        index: prevIndex,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default game;","const initialState = {\n\n};\n\nconst timerReducer = (state = initialState, action) => {\n  switch(action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default timerReducer;","import { combineReducers } from \"redux\";\nimport game from './game';\nimport timerReducer from './timer'\n\nconst rootReducer = combineReducers({\n  game,\n  timerReducer,\n});\n\nexport default rootReducer;","import { createStore } from 'redux';\nimport rootReducer from './reducers/index';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}